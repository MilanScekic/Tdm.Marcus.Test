# Workflow for the CI/CD pipeline for the SEKO Assembly prototype project

name: Assembly Microservices Pipeline

# Controls when the workflow will runs
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  ACRNAME: tdmsekoassemblyacr
  RGNAME: tdmsekoassemblyrg
  AKSNAME: tdmsekoassemblyacraks
  CHART_OVERRIDE_PATH: ./helm/mssekoassembly/values.yaml
  CHART_OVERRIDES: ""
  CHART_PATH: ./helm/mssekoassembly/templates

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  CI:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: az CLI login
        uses: azure/login@v1
        with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          
      - name: ACR login
        run: az acr login -n $ACRNAME
        
      - name: Build and push Markus Windows core 3.1 image image
        uses: docker/build-push-action@v2
        with: 
          context: ./Tdm.Marcus.Test
          push: true
          tags: ${{ env.ACRNAME }}.azurecr.io/markustestrepo:${{ github.run_number }}
         

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Done with the all image builds and pushes to the ACR!
        
  CD:
    runs-on: windows-latest
    needs: CI
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        
      - name: az CLI login
        uses: azure/login@v1
        with: 
          creds: ${{ secrets.AZURE_CREDENTIALS }}
  
      - name: Azure Kubernetes set context  
        uses: Azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group: ${{ env.RGNAME }}
          cluster-name: ${{ env.AKSNAME }}
       
      - name: Helm upgrade
        run: helm upgrade mssekoassembly helm/mssekoassembly --install --set deployment.tag=${{ github.run_number }}
            
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Done with the all image deployment to the AKS!